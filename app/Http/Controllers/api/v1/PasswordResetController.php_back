<?php namespace App\Http\Controllers\api\v1;

use App\Http\Requests;
use App\Http\Controllers\Controller;

use Illuminate\Http\Request;
use App\Models\User;
use App\Models\PasswordReset;
use Illuminate\Database\QueryException;

class PasswordResetController extends Controller {

	/**
	 * The method will take the request object and username.
     * It will get the username and update a pin in tables.
	 *
     * @param  String $username
	 * @return Response Json
	 */
	public function create($username)
	{

        $user = User::where('username', '=', $username)->first();

        if(!user)
            return $this->prepareResponse('user.NOT_FOUND');

        PasswordReset::where('user_id', '=', $user->id)->delete();

        $pin = $user->passcode;

        PasswordReset::create([
            'user_id'   => $user->id,
            'pin'       => $pin
        ]);

        $this->notify_pin($pin, $user);

        return $user->toArray();
	}

    public function verify($username, Request $request)
    {
        $passcode = $request->input('passcode');

        $user = User::where('username', '=', $username)->first();

        if($user) {
            $passcode = PasswordReset::where('user_id', '=', $user->id)->where('pin', '=', $passcode)->first();

            if($passcode)
                return $user->toArray();
            else
				return $this->prepareResponse('user.VERIFICATION_NOT_FOUND');
                
        }

        return $this->prepareResponse('user.NOT_FOUND');
    }

	/**
	 * The method will get the parameter PIN and password1, password2.
     * It will check pin, match passwords and updated the user's password.
	 *
	 * @param  Request $request
	 * @return Response Json
	 */
	public function update($username, Request $request)
	{

        $user = User::where('username', '=', $username)->first();

        if(!$user)
          return $this->prepareResponse('user.NOT_FOUND');


        $reset = PasswordReset::where('user_id', '=', $user->id)->first();

        if(!$reset)
            return $this->prepareResponse('BAD_REQUEST');

        $password1 = $request->input('password1');
        $password2 = $request->input('password2');


        if($password1 == $password2) {
            $user->password = bcrypt($password1);
            $user->save();
            $reset->delete();
			
			return $this->prepareResponse('user.PASSWORD_UPDATED');
        } else {
            return $this->prepareResponse('user.PASSWORD_NOT_MATCH');
        }
	}

    /**
     * The method will take 2 parameters, $pin and $user_id.
     * It notifies the user the given pin.
     *
     * @param  Integer $pin, $user_id
     * @return Response Json
     */
    public function notify_pin($pin, $user) {
        echo $pin . " : " , $user->id;
        return ;
    }
}
